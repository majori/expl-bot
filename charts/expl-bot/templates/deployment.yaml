apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "expl-bot.fullname" . }}
  labels:
    {{- include "expl-bot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "expl-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "expl-bot.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "expl-bot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 6000
              protocol: TCP
          env:
            - name: TG_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "expl-bot.fullname" . }}-telegram-token
                  key: token
            {{- if .Values.ingress.enabled }}
            - name: TG_WEBHOOK
              value: https://{{ .Values.ingress.host }}
            {{- end }}
            - name: PG_HOST
              value: {{ .Values.postgres.host }}
            - name: PG_DATABASE
              value: {{ .Values.postgres.database }}
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.userSecret.name }}
                  key: {{ .Values.postgres.userSecret.key }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.passwordSecret.name }}
                  key: {{ .Values.postgres.passwordSecret.key }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
